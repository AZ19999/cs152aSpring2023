index.js (main file):
const mongoose = require("mongoose");
const express = require("express");
const Subscriber = require("./models/subscriber");
const methodOverride = require("method-override");
const layouts = require("express-ejs-layouts");
const connectFlash = require("connect-flash");
const cookieParser = require("cookie-parser");
const expressSession = require("express-session");
const expressValidator = require("express-validator");
const passport = require("passport");
const User = require("./models/user");
const router = require("./routes/index");
const socketio = require("socket.io");

const app = express();

mongoose.connect("mongodb://localhost:27017/recipe_db");
const db = mongoose.connection;
db.once("open", () => {
  console.log("Successfully connected to mongodb!");
});

app.use(express.static("public"));
app.use(express.json());
app.use(express.urlencoded());
app.set("view engine", "ejs");
app.use(layouts);
app.use(expressValidator());
app.use(
  methodOverride("_method", {
    methods: ["POST", "GET"],
  })
);
app.use(cookieParser("secret-pascode"));
app.use(
  expressSession({
    secret: "secret_passcode",
    cookie: {
      maxAge: 40000,
    },
    resave: false,
    saveUninitialized: false,
  })
);
app.use(connectFlash());
app.use(passport.initialize());
app.use(passport.session());

passport.use(User.createStrategy());
passport.serializeUser(User.serializeUser());
passport.deserializeUser(User.deserializeUser());

app.use((req, res, next) => {
  res.locals.flashMessages = req.flash();
  res.locals.loggedIn = req.isAuthenticated();
  res.locals.currentUser = req.user;
  next();
});

app.use("/", router);

const server = app.listen(3000, () => {
  console.log("application is running");
});
const io = socketio(server);

io.on("connection", (client) => {
  console.log("new connection");
  client.on("disconnect", () => {
    console.log("user disconnected");
  });
  client.on("message", () => {
    io.emit("message", {
      content: "Hello",
    });
  });
});
------------------------------------------------------------------

chat.js:
const socket = io();
$("#chatForm").submit(() => {
  socket.emit("message");
  $("#chat-input").val("");
  return false;
});
socket.on("message", (message) => {
  displayMessage(message.content);
});
let displayMessage = (message) => {
  $("#chat").prepend($("<li>").html(message));
};
------------------------------------------------------------------------------

layout.ejs:
<html>
  <head>
    <title>The Kitchen</title>
    <link rel="stylesheet" href="/css/style.css" type="text/css" />
  </head>
  <body>
    <header>
      <div class="header">
        <h1>The Kitchen</h1>
      </div>
      <ul class="nav">
        <li><a href="/">Home</a></li>
        <li><a href="courses">Courses</a></li>
        <li><a href="contact">Contact</a></li>
        <li><%- include('courses/_coursesModal') %></li>
      </ul>
    </header>

    <div class="flashes">
      <% if (flashMessages) { %> <% if (flashMessages.success) { %>
      <div class="flash success"><%= flashMessages.success %></div>
      <%} else if (flashMessages.error){ %>
      <div class="flash error"><%= flashMessages.error %></div>
      <%} %> <%} %>
    </div>
    <% if (loggedIn) { %> Logged in as
    <a href="<%=`/users/${currentUser._id}`%>"><%= currentUser.fullName %></a>
    <div style="display: none" id="apiToken"><%= currentUser.apiToken %></div>

    <a href="/users/logout">Log out</a>
    <%} else {%>
    <a href="/users/login">Log In</a>
    <% } %> <%- body%>
    <footer>
      <p>The Kitchen - CopyrightÂ©2023</p>
    </footer>
    <script type="text/javascript" src="/js/jquery.min.js"></script>
    <script type="text/javascript" src="/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="/js/chat.js"></script>
    <script type="text/javascript" src="/js/recipeApp.js"></script>
  </body>
</html>